CURSOR_CONTEXT="""
这是一个基于 Taro + React + TypeScript 的跨端应用项目，主要用于宝宝健康成长助手。

项目架构说明：
- src/
  - components/     # 可复用的组件
  - pages/         # 页面组件
  - data/          # 数据相关文件
  - app.config.ts  # Taro 应用配置
  - app.ts         # 应用入口
  - constants.ts   # 常量定义
  - rule.ts        # 规则相关逻辑

技术栈：
- Taro 4.0.9 (跨端开发框架)
- React 18
- TypeScript
- NutUI React Taro (UI 组件库)
- VChart (可视化图表库)
- Sass (样式预处理器)

代码规范：
1. 使用 TypeScript 进行类型检查
2. 使用 ESLint + Stylelint 进行代码规范检查
3. 使用函数式组件和 React Hooks
4. 使用 Sass 进行样式管理

项目特点：
- 支持多端运行（微信小程序、H5等）
- 使用 NutUI 组件库构建界面
- 集成数据可视化能力
- 使用 dayjs 处理时间相关逻辑

文件命名规范：
- 组件文件：PascalCase（如 UserProfile.tsx）
- 页面文件：kebab-case（如 user-profile.tsx）
- 工具函数：camelCase（如 formatDate.ts）
- 样式文件：与组件同名，使用 .scss 后缀
"""

# 组件模板
CURSOR_COMPONENT_TEMPLATE="""
import React from 'react';
import { View } from '@tarojs/components';
import './[NAME].scss';

interface [NAME]Props {
  // props 类型定义
}

export const [NAME]: React.FC<[NAME]Props> = () => {
  return (
    <View className='[NAME-kebab]'>

    </View>
  );
};
"""

# 页面模板
CURSOR_PAGE_TEMPLATE="""
import React from 'react';
import { View } from '@tarojs/components';
import './index.scss';

const [NAME]: React.FC = () => {
  return (
    <View className='page-container'>

    </View>
  );
};

export default [NAME];
"""
"""