CURSOR_CONTEXT="""
这是一个基于 Taro + React + TypeScript 的跨端应用项目，主要用于宝宝健康成长助手。

项目架构说明：
- src/
  - components/     # 可复用的组件
  - pages/         # 页面组件
  - data/          # 数据相关文件
  - app.config.ts  # Taro 应用配置
  - app.ts         # 应用入口
  - constants.ts   # 常量定义
  - rule.ts        # 规则相关逻辑

技术栈：
- Taro 4.0.9 (跨端开发框架)
- React 18
- TypeScript
- NutUI React Taro (UI 组件库)
- VChart (可视化图表库)
- Sass (样式预处理器)

代码规范：
1. 使用 TypeScript 进行类型检查
2. 使用 ESLint + Stylelint 进行代码规范检查
3. 使用函数式组件和 React Hooks
4. 使用 Sass 进行样式管理

项目特点：
- 支持多端运行（微信小程序、H5等）
- 使用 NutUI 组件库构建界面
- 集成数据可视化能力
- 使用 dayjs 处理时间相关逻辑

文件命名规范：
- 组件文件：PascalCase（如 UserProfile.tsx）
- 页面文件：kebab-case（如 user-profile.tsx）
- 工具函数：camelCase（如 formatDate.ts）
- 样式文件：与组件同名，使用 .scss 后缀
"""

# 组件模板
CURSOR_COMPONENT_TEMPLATE="""
import React from 'react';
import { View } from '@tarojs/components';
import './[NAME].scss';

interface [NAME]Props {
  // props 类型定义
}

export const [NAME]: React.FC<[NAME]Props> = () => {
  return (
    <View className='[NAME-kebab]'>

    </View>
  );
};
"""

# 页面模板
CURSOR_PAGE_TEMPLATE="""
import React from 'react';
import { View } from '@tarojs/components';
import './index.scss';

const [NAME]: React.FC = () => {
  return (
    <View className='page-container'>

    </View>
  );
};

export default [NAME];
"""

# 主题风格指南
# 请在开发中遵循以下设计规范

# 颜色系统
PRIMARY_COLOR=#58cc02      # 主要颜色，用于重要按钮和强调
PRIMARY_HOVER=#4fb502     # 主要颜色悬停状态
PRIMARY_ACTIVE=#46a302    # 主要颜色激活状态
ERROR_COLOR=#ff4b4b       # 错误颜色
ERROR_LIGHT=#fef0f0       # 错误背景色
TEXT_PRIMARY=#3c3c3c      # 主要文字颜色
TEXT_SECONDARY=#777       # 次要文字颜色

# 布局
BORDER_RADIUS=12px        # 通用圆角
BOX_SHADOW=0 2px 8px rgba(0, 0, 0, 0.08)  # 通用阴影

# 字体
FONT_FAMILY=-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif
FONT_SIZE_BASE=16px       # 基础字号
FONT_SIZE_SM=14px        # 小字号
FONT_SIZE_XS=12px        # 超小字号
FONT_SIZE_LG=20px        # 大字号
FONT_SIZE_XL=24px        # 超大字号

# 间距
SPACING_XS=4px           # 超小间距
SPACING_SM=8px           # 小间距
SPACING_MD=12px          # 中等间距
SPACING_LG=16px          # 大间距
SPACING_XL=24px          # 超大间距

# 动画
TRANSITION_FAST=0.2s     # 快速过渡
TRANSITION_NORMAL=0.3s   # 普通过渡
TRANSITION_TIMING=cubic-bezier(0.4, 0, 0.2, 1)  # 过渡时间函数

# 设计规范说明
# 1. 使用 src/styles/variables.scss 中定义的变量
# 2. 使用 src/styles/global.scss 中定义的全局样式
# 3. 组件样式应遵循以下原则：
#   - 优先使用预定义的 mixins
#   - 保持样式的一致性和可维护性
# 4. 响应式设计断点：
#   - 移动端：< 576px
#   - 平板：576px - 992px
#   - 桌面：> 992px

# UI 组件使用指南
# 1. 按钮样式
#   - 主要按钮：使用 $primary-color
#   - 次要按钮：使用 #f0f0f0 背景
#   - 危险按钮：使用 $error-color
# 2. 卡片样式
#   - 使用 @include card mixin
#   - 悬停效果使用 @include hover-effect
# 3. 布局
#   - 使用预定义的间距变量
#   - 使用 flex-center mixin 居中内容

# 开发注意事项
# 1. 确保所有新增样式符合主题规范
# 2. 优先使用预定义的变量和 mixins
# 3. 保持代码的一致性和可维护性
# 4. 遵循响应式设计原则
"""